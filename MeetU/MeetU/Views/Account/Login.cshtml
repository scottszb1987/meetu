@using MeetU.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="login-content-wrapper">
    <div class="login-phone-mode-homepage-wrapper js-login-click-to-scroll">
        <div class="login-phone-mode-homepage">
            <img class="login-phone-mode-logo" src="../../Content/Images/Logos/meetu-logo-160x160.png" />
            <img class="login-phone-mode-text" src="../../Content/Images/Logos/MeetU-text-240x80.png" />
        </div>
        <div class="login-phone-mode-homepage-arrow-wrapper js-login-jump-icon">
            <span class="glyphicon glyphicon-menu-up login-phone-mode-homepage-arrow"></span>
        </div>
    </div>
    <div class="panel login-wrapper js-login-form">
        <div class="panel-heading login-heading">login</div>
        <div class="panel-body login-body">
            <div class="col-md-10 col-md-offset-1 login-form-wrapper">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = "/" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger js-invalid-login-message" })
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control login-input", @style = "max-width: none", @placeholder = "User Name" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })

                            @Html.PasswordFor(m => m.Password, new { @class = "form-control login-input", @style = "max-width: none", @placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                            <input type="submit" value="Go!" class="btn btn-primary btn-block form-control login-button" style="max-width: none" />
                        </div>
                    }
                </section>
                <hr class="login-separator" />
                <section id="socialLoginForm">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = "/" })
                </section>
            </div>
        </div>
        <div class="login-footer">
            <p class="login-footer-text">&copy; @DateTime.Now.Year copyright - Yue Wang</p>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(".js-login-click-to-scroll").click({ param: 500 }, scrollLogin);

        if ($(".js-invalid-login-message").length > 0) {
            scrollLogin()
        } else {
            // Executes scrollLogin(speed) in x mileseconds
            setTimeout(function () { scrollLogin(2000) }, 1500);
        }

        // Scroll down to login panel
        function scrollLogin(speed) {
            if (!speed) { 
                speed = 0
            } else if (typeof speed === 'object') { 
                speed = speed.data.param
            }
            $('body').animate({
                scrollTop: $(".js-login-form").offset().top
            },
                speed);
        }
    </script>
}